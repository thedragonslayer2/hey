if not firetouchinterest then
	game:GetService"StarterGui":SetCore("SendNotification", { Title = "Error", Text = "Your Exploit Does Not\nSupport The Script", Duration = 5 })
	return
end
local library = loadstring(game:HttpGet"https://raw.githubusercontent.com/thedragonslayer2/hey/main/Ui%20Lib")()
local players = game:GetService"Players"
local client = players.LocalPlayer
local autofarm = library:CreateWindow"Be a Spider! Tycoon"
autofarm:AddToggle{ text = "Auto Build", flag = "build" }
autofarm:AddToggle{ text = "Auto Collect Bugs", flag = "bug" }
autofarm:AddToggle{ text = "Auto Sell", flag = "sell" }
spawn(function()
	local bum = 0
	while wait() do
		if library.flags.build or library.flags.bug then
			for i, v in pairs(game:GetService"Workspace".Tycoons[client.Name].World.Tiles:GetChildren()) do
				pcall(function()
					if library.flags.bug and v:FindFirstChild"SpawnPoint" then
						if v:FindFirstChild"Hitbox" then v.Hitbox.CFrame = client.Character.PlayerHitbox.CFrame end
					elseif library.flags.build and client.PlayerGui.Main.LeftSideBtns.WebsAmount.Button.Amount.Text ~= "0" and v:FindFirstChild(v.Name) and v:FindFirstChild"TileProgressBill" and v:FindFirstChild"ConstructorPrefab" then
						firetouchinterest(client.Character.PlayerHitbox, v[v.Name], 0)
						firetouchinterest(client.Character.PlayerHitbox, v[v.Name], 1)
					end
					if string.find(tostring(i), "25") then
						wait()
					end
				end)
			end
		end
	end
end)
spawn(function()
	while wait() do
		if library.flags.sell then
			firetouchinterest(client.Character.PlayerHitbox, workspace.Lobbies:FindFirstChild("TouchInterest", true).Parent, 0)
			wait()
			firetouchinterest(client.Character.PlayerHitbox, workspace.Lobbies:FindFirstChild("TouchInterest", true).Parent, 1)
		end
	end
end)

local function serverhop()
	print"Server Hopping"
	local starterGui = game:GetService"StarterGui"
	starterGui:SetCore("SendNotification", { Title = "Server Hop", Text = "Looking For A Server", Duration = 2 })
	local id = nil
	local goodserver = nil
	local once = false
	local gamelink = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"

	function serversearch()
		for _, v in pairs(game:GetService"HttpService":JSONDecode(game:HttpGet(gamelink)).data) do
			if type(v) == "table" and game.Players.MaxPlayers > v.playing and id == nil then
				if v.id ~= game.JobId then
					goodserver = v.id
					if not once then
						print("Server Found " .. v.id)
						once = true
						id = v.id
						starterGui:SetCore("SendNotification", { Title = "Switching Server", Text = "Server Found\n" .. v.id, Duration = 2 })
						game:GetService"TeleportService":TeleportToPlaceInstance(game.PlaceId, goodserver)
					end
				end
			end
		end
	end

	function getservers()
		serversearch()
		for i, v in pairs(game:GetService"HttpService":JSONDecode(game:HttpGet(gamelink))) do
			if i == "nextPageCursor" then
				if gamelink:find"&cursor=" then
					local a = gamelink:find"&cursor="
					local b = gamelink:sub(a)
					gamelink = gamelink:gsub(b, "")
				end
				gamelink = gamelink .. "&cursor=" .. v
				getservers()
			end
		end
	end

	getservers()
	if id == nil then
		print"Server Hop Failed"
		starterGui:SetCore("SendNotification", { Title = "Server Hop Failed", Text = "No Other Server Found", Duration = 2 })
	end
end

-- //gui
if game:GetService"PermissionsService":GetIsThirdPartyTeleportAllowed() then
	tp:AddBox{ text = "Put Game ID/Place ID Below", value = game.PlaceId, flag = "gameid" }
	tp:AddButton{
		text = "Teleport To ID",
		callback = function()
			game:GetService"TeleportService":Teleport(library.flags.gameid, client)
		end
	}
end
autofarm:AddButton{
	text = "Rejoin",
	callback = function(v)
		game:GetService"TeleportService":TeleportToPlaceInstance(game.PlaceId, game.JobId)
	end
}
autofarm:AddButton{ text = "Switch Server", callback = function(v) serverhop() end }
autofarm:AddLabel{ text = "RightAlt To Hide/Show Gui" }
autofarm:AddButton{
	text = "Showcase Link",
	callback = function() setclipboard(tostring"https://youtu.be/eUMSoLjIH40") end
}
autofarm:AddLabel{ text = "Mr Jack" }
library:Init()
