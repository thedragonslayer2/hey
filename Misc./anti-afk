if not getgenv().MrJackMisc then
	repeat wait() until game:IsLoaded()
	local a = game:GetService"Players".LocalPlayer
	pcall(function()
		if getgenv().identifyexecutor() == "Synapse X" then
			getgenv().setfflag("HumanoidParallelRemoveNoPhysics", "False")
			getgenv().setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
		end
	end)
	local b, c = syn and syn.request, http and http.request
	local request = http_request or request or HttpPost or b or c
	if request and hookfunction and not WebsiteRequest then
		anti_webhook = hookfunction(request, function(self)
			if self.Url and self.Method == "POST" then
				if string.find(self.Url, "Bypass") then self.Url = string.gsub(self.Url, "Bypass", "")
				else
					local d = { Url = self.Url, Method = "DELETE" }
					request(d)
					return {}
				end
			end
			return anti_webhook(self)
		end)
		getgenv().WebsiteRequest = request
	end
	coroutine.wrap(function()
		local e, f, g = game:GetService"BadgeService", game:GetService"GamePassService", game:GetService"MarketplaceService"
		pcall(function() setreadonly(getrawmetatable(game), false) end)
		if hookfunction then
			hookfunction(g.UserOwnsGamePassAsync or g.PlayerOwnsAsset, function(...) return true end)
			hookfunction(e.UserHasBadgeAsync or e.UserHasBadge, function(...) return true end)
			hookfunction(f.PlayerHasPass, function(...) return true end)
		end
		if hookmetamethod then
			local h
			h = hookmetamethod(Enum.HumanoidStateType, "__index", function(i, j)
				if j == "StrafingNoPhysics" and i == Enum.HumanoidStateType then return Random.new():NextInteger(150, 1e5) end
				return h(i, j)
			end)
			local k
			k = hookmetamethod(game, "__index", function(i, j)
				if j == "AccountAge" and i == a then return tonumber"99999"
				elseif j == "MembershipType" and i == a then return Enum.MembershipType.Premium end
				return k(i, j)
			end)
			local l
			l = hookmetamethod(game, "__namecall", function(i, ...)
				local m, n = getnamecallmethod(), { ... }
				if m == "kick" or m == "Kick" then
					if n[1] and n[1] == "MrJack" then l(i, n[2]) end
					return wait(math.huge)
				elseif (m == "UserOwnsGamePassAsync" or m == "PlayerOwnsAsset") and i == g then return true
				elseif (m == "UserHasBadgeAsync" or m == "UserHasBadge") and i == e then return true
				elseif m == "PlayerHasPass" and i == f then return true
				elseif m == "GetRankInGroup" and i == a then return 255
				elseif m == "IsInGroup" and i == a then return true end
				return l(i, ...)
			end)
		end
	end)()
	a:GetPropertyChangedSignal"DevCameraOcclusionMode":Connect(function() a.DevCameraOcclusionMode = "Invisicam" end)
	a:GetPropertyChangedSignal"CameraMaxZoomDistance":Connect(function() a.CameraMaxZoomDistance = 9e4 end)
	if getconnections then
		for o, p in pairs(getconnections(game.Players.LocalPlayer.Idled)) do p:Disable() end
	end
	a.DevCameraOcclusionMode, a.CameraMaxZoomDistance = "Invisicam", 9e4
	getgenv().MrJackMisc = true
end
