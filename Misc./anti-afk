repeat wait() until game:IsLoaded()
local client = game:GetService"Players".LocalPlayer
-- anti afk
local vu = game:GetService"VirtualUser"
client.Idled:connect(function()
	spawn(function()
		vu:CaptureController()
		vu:ClickButton2(Vector2.new())
	end)
	vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
	wait(1)
	vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)
client:GetPropertyChangedSignal"DevCameraOcclusionMode":Connect(function() client.DevCameraOcclusionMode = "Invisicam" end)
client:GetPropertyChangedSignal"CameraMaxZoomDistance":Connect(function() client.CameraMaxZoomDistance = 1e4 end)
-- anti discord
local synapse, shithttp = syn and syn.request, http and http.request
local request = http_request or request or HttpPost or synapse or shithttp
if request and hookfunction then
	anti_webhook = hookfunction(request, function(self)
		if self.Url and self.Method == "POST" and self.Url then
			if string.find(self.Url, "Bypass") then self.Url = string.gsub(self.Url, "Bypass", "")
			else
				local abcdef = { Url = self.Url, Method = "DELETE" }
				request(abcdef)
				self.Url = "SOMEONE TRYING TO LOG SOMETHING!"
			end
		end
		return anti_webhook(self)
	end)
end
if hookmetamethod then
	pcall(function() setreadonly(getrawmetatable(game), false) end)
	--[[
		local OldIndex
		OldIndex = hookmetamethod(game, "__index", function(Self, Index) return OldIndex(Self, Index) end)
		local OldNewIndex
		OldNewIndex = hookmetamethod(game, "__newindex", function(Self, Index, Value) return OldNewIndex(Self, Index, Value) end)
		local OldNamecall
		OldNamecall = hookmetamethod(game, "__namecall", function(Self, ...) return OldNamecall(Self, ...) end)
	]]
	-- Anti Noclip Bypass
	local rnd, BypassNoclip = Random.new():NextInteger(150, 1e5)
	BypassNoclip = hookmetamethod(Enum.HumanoidStateType, "__index", function(Self, Index)
		if Index == "StrafingNoPhysics" and Self == Enum.HumanoidStateType then return rnd end
		return BypassNoclip(Self, Index)
	end)
	-- Spoof Account
	local acc_spoof
	acc_spoof = hookmetamethod(game, "__index", function(Self, Index)
		if Index == "AccountAge" and Self == client then return tonumber"99999"
		elseif Index == "MembershipType" and Self == client then return Enum.MembershipType.Premium end
		return acc_spoof(Self, Index)
	end)
	-- things
	local OldNamecall
	OldNamecall = hookmetamethod(game, "__namecall", function(Self, ...)
		local method = getnamecallmethod()
		if method:lower() == "kick" and Self == client and not checkcaller() then return wait(math.huge)
		elseif method == "GetRankInGroup" and Self == client then return 255
		elseif table.find({
			"UserOwnsGamePassAsync",
			"PlayerOwnsAsset",
			"PlayerHasPass",
			"UserHasBadge",
			"UserHasBadgeAsync",
			"IsInGroup"
		}, method) and Self == client then return true end
		return OldNamecall(Self, ...)
	end)
	pcall(function() setreadonly(getrawmetatable(game), true) end)
end
client.DevCameraOcclusionMode, client.CameraMaxZoomDistance = "Invisicam", 1e4
return warn"ANTI AFK ACTIVATED!"
