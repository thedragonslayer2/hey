if not getgenv().MrJackMisc then
	repeat wait() until game:IsLoaded()
	local a = game:GetService"Players".LocalPlayer
	pcall(function()
		if getgenv().identifyexecutor() == "Synapse X" then
			--getgenv().setfflag("HumanoidParallelRemoveNoPhysics", "False")
			--getgenv().setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
		end
	end)
	local b, c = syn and syn.request, http and http.request
	local request = http_request or request or HttpPost or b or c
	if request and hookfunction and not WebsiteRequest then
		anti_webhook = hookfunction(request, function(self)
			if self.Url and self.Method == "POST" then
				if string.find(self.Url, "Bypass") then self.Url = string.gsub(self.Url, "Bypass", "")
				else
					local d = { Url = self.Url, Method = "DELETE" }
					request(d)
					return {}
				end
			end
			return anti_webhook(self)
		end)
		getgenv().WebsiteRequest = request
	end
	pcall(function()
		local e, f, g = game:GetService"BadgeService", game:GetService"GamePassService", game:GetService"MarketplaceService"
		pcall(function() setreadonly(getrawmetatable(game), false) end)
		if hookfunction then
			for h, i in next, {
				[g.PlayerOwnsAsset] = true,
				[g.UserOwnsGamePassAsync] = true,
				[e.UserHasBadge] = true,
				[e.UserHasBadgeAsync] = true,
				[f.PlayerHasPass] = true
			} do
				local j = function() return i end
				hookfunction(h, newcclosure and newcclosure(j) or j)
			end
		end
		pcall(function()
			local k
			local j = function(l, m)
				if m == "AccountAge" and l == a then return tonumber"99999"
				elseif m == "MembershipType" and l == a then return Enum.MembershipType.Premium
				elseif m == "StrafingNoPhysics" and l == Enum.HumanoidStateType then return Random.new():NextInteger(150, 1e5) end
				return k(l, m)
			end
			if hookmetamethod then
				k = hookmetamethod(game, "__index", newcclosure and newcclosure(j) or j)
			elseif hookfunction and getrawmetatable then
				k = hookfunction(getrawmetatable(game).__index, newcclosure and newcclosure(j) or j)
			end
		end)
		pcall(function()
			if not getnamecallmethod then return end
			local n
			local j = function(l, ...)
				local o, p = getnamecallmethod(), { ... }
				if (o == "kick" or o == "Kick") and l == a then
					if p[1] and p[1] == "MrJack" then n(l, p[2]) end
					return wait(math.huge)
				elseif (o == "UserOwnsGamePassAsync" or o == "PlayerOwnsAsset") and l == g then return true
				elseif (o == "UserHasBadgeAsync" or o == "UserHasBadge") and l == e then return true
				elseif o == "PlayerHasPass" and l == f then return true
				elseif o == "GetRankInGroup" and l == a then return 255
				elseif o == "IsInGroup" and l == a then return true
				elseif o == "FindService" and p[1] == "VirtualUser" and l == game and (not checkcaller or not checkcaller()) then return nil end
				return n(l, ...)
			end
			if hookmetamethod then
				n = hookmetamethod(game, "__namecall", newcclosure and newcclosure(j) or j)
			elseif hookfunction and getrawmetatable then
				n = hookfunction(getrawmetatable(game).__namecall, newcclosure and newcclosure(j) or j)
			end
		end)
	end)
	a:GetPropertyChangedSignal"DevCameraOcclusionMode":Connect(function() a.DevCameraOcclusionMode = "Invisicam" end)
	a:GetPropertyChangedSignal"CameraMaxZoomDistance":Connect(function() a.CameraMaxZoomDistance = 9e4 end)
	if getconnections then
		for q, r in pairs(getconnections(game.Players.LocalPlayer.Idled)) do r:Disable() end
	else
		local s = game:GetService"VirtualUser"
		a.Idled:connect(function()
			s:CaptureController()
			s:ClickButton2(Vector2.new())
		end)
	end
	a.DevCameraOcclusionMode, a.CameraMaxZoomDistance = "Invisicam", 9e4
	getgenv().MrJackMisc = true
end
