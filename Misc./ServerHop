print"Server Hop"
game:GetService"StarterGui":SetCore("SendNotification", { Title = "Notification", Text = "Looking For A Server", Duration = 2 })
local goodserver = nil
local gamelink = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"

function serversearch()
	for _, v in pairs(game:GetService"HttpService":JSONDecode(game:HttpGetAsync(gamelink)).data) do
		if type(v) == "table" and tonumber(v.maxPlayers) > tonumber(v.playing) and v.id ~= game.JobId then
			goodserver = v.id
			print("Server Found" .. v.id)
			game:GetService"StarterGui":SetCore("SendNotification", { Title = "Notification", Text = "Teleporting To Server\nID: " .. v.id, Duration = 5 })
			game:GetService"TeleportService":TeleportToPlaceInstance(game.PlaceId, goodserver)
			wait(6)
		end
	end
end

function getservers()
	serversearch()
	for i, v in pairs(game:GetService"HttpService":JSONDecode(game:HttpGetAsync(gamelink))) do
		if i == "nextPageCursor" then
			if gamelink:find"&cursor=" then
				local a = gamelink:find"&cursor="
				local b = gamelink:sub(a)
				gamelink = gamelink:gsub(b, "")
			end
			gamelink = gamelink .. "&cursor=" .. v
			getservers()
		end
	end
end

getservers()
if goodserver == nil then
	print"Server Hop Failed"
	game:GetService"StarterGui":SetCore("SendNotification", { Title = "Notification", Text = "No Server Found", Duration = 2 })
end
