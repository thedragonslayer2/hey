if not IrisNotificationMrJack then
	loadstring(game:HttpGet"https://raw.githubusercontent.com/thedragonslayer2/hey/main/Misc./iris%20notification%20function")()
elseif IrisNotificationUserMrJack then IrisNotificationUserMrJack.ClearAllNotifications() end
warn"Looking For A Server"
IrisNotificationMrJack(1, "Notification", "Looking For A Server", 2)
local goodserver = nil
local gamelink = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"

function serversearch()
	for _, v in pairs(game:GetService"HttpService":JSONDecode(game:HttpGetAsync(gamelink)).data) do
		if type(v) == "table" and tonumber(v.maxPlayers) > tonumber(v.playing) and v.id ~= game.JobId then
			goodserver = v.id
			warn("Server Found " .. v.id)
			IrisNotificationMrJack(1, "Notification", "Teleporting To Server\n" .. v.id, 5)
			game:GetService"TeleportService":TeleportToPlaceInstance(game.PlaceId, goodserver)
			wait(6)
		end
	end
end

function getservers()
	pcall(serversearch)
	for i, v in pairs(game:GetService"HttpService":JSONDecode(game:HttpGetAsync(gamelink))) do
		if i == "nextPageCursor" then
			if gamelink:find"&cursor=" then
				local a = gamelink:find"&cursor="
				local b = gamelink:sub(a)
				gamelink = gamelink:gsub(b, "")
			end
			gamelink = gamelink .. "&cursor=" .. v
			pcall(getservers)
		end
	end
end

pcall(getservers)
if goodserver == nil then
	warn"Server Hop Failed"
	IrisNotificationMrJack(1, "Notification", "No Server Found", 2)
end
